@import "./themes.scss";
@import "./shape.scss";

//遍历主题map
@mixin themeify {
    @each $theme-name, $theme-map in $themes {
        //!global 把局部变量强升为全局变量
        $theme-map: $theme-map !global;

        //判断html的data-theme的属性值  #{}是sass的插值表达式
        //& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot
        [data-theme="#{$theme-name}"] & {
            @content;
        }
    }
}

// 下面更換顏色方法可以只用一個，寫多個只是方便區分使用場景
//声明一个根据Key获取颜色的function
@function themed($key) {
    @return map-get($theme-map, $key);
}

//获取背景颜色
@mixin background-color($color) {
    @include themeify {
        background-color: themed($color);
    }
}

//获取背景颜色
@mixin background($color) {
    @include themeify {
        background: themed($color);
    }
}

//获取颜色
@mixin color($color) {
    @include themeify {
        color: themed($color);
    }
}

//获取字体颜色
@mixin font-color($color) {
    @include themeify {
        color: themed($color);
    }
}

//获取边框颜色
@mixin border($width, $type, $color) {
    @include themeify {
        border: $width $type themed($color);
    }
}

//获取边框颜色
@mixin border-color($color) {
    @include themeify {
        border-color: themed($color);
    }
}

//获取边框颜色
@mixin border-left($width, $type, $color) {
    @include themeify {
        border-left: $width $type themed($color);
    }
}
//获取边框颜色
@mixin border-bottom($width, $type, $color) {
    @include themeify {
        border-bottom: $width $type themed($color);
    }
}
//获取边框颜色
@mixin border-top($width, $type, $color) {
    @include themeify {
        border-top: $width $type themed($color);
    }
}

@mixin border-right($width, $type, $color) {
    @include themeify {
        border-right: $width $type themed($color);
    }
}

//获取svg填充颜色
@mixin fill-color($color) {
    @include themeify {
        fill: themed($color);
    }
}

//box-shadow
@mixin box-shadow($type, $h-shadow, $v-shadow, $blur, $color) {
    @if $type == "" {
        @include themeify {
            box-shadow: $h-shadow $v-shadow $blur themed($color);
        }
    }
    @if $type == "inset" {
        @include themeify {
            box-shadow:$type $h-shadow $v-shadow $blur themed($color);
        }
    }
}

@mixin stroke($color) {
    @include themeify {
        stroke: themed($color);
    }
}
